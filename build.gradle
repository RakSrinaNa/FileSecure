plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id "com.github.ben-manes.versions" version '0.28.0'
    id 'com.novoda.build-properties' version '0.4.1'
    id 'idea'
    id 'java'
    id 'application'
    id 'io.freefair.lombok' version '5.0.1'
}

def secretsFile = new File(".", "secrets.properties")

if (!secretsFile.getParentFile().exists()) {
    secretsFile.mkdirs()
}

if (!secretsFile.exists()) {
    secretsFile.withWriterAppend { w ->
        w << "\n"
    }
}

buildProperties {
    secrets {
        using(file('secrets.properties')).or(System.getenv()).or([
                "GITHUB_USER" : "RakSrinaNa",
                "GITHUB_TOKEN": "N/A"
        ])
    }
}

group = 'fr.raksrinana'
description = 'FileSecure'
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_14

mainClassName = project.mainClass

dependencies {
    implementation("org.slf4j:slf4j-api:${project.slf4j_version}")
    implementation("ch.qos.logback:logback-classic:${project.logback_version}") {
        exclude group: 'edu.washington.cs.types.checker', module: 'checker-framework'
    }

    implementation("fr.raksrinana:utils.http:${project.raksrinana_utils_version}")
    implementation("fr.raksrinana:nameascreated:${project.nameascreated_version}")

    implementation("com.fasterxml.jackson.core:jackson-core:${project.jackson_version}")
    implementation("com.fasterxml.jackson.core:jackson-annotations:${project.jackson_version}")
    implementation("com.fasterxml.jackson.core:jackson-databind:${project.jackson_version}")

    implementation("com.beust:jcommander:${project.jcommander_version}")
    implementation("com.konghq:unirest-java:${project.unirest_version}")
}

repositories {
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
    maven {
        url = 'https://jcenter.bintray.com'
    }
    maven {
        url = 'https://maven.pkg.github.com/RakSrinaNa/JavaUtils/'
        credentials {
            username buildProperties.secrets['GITHUB_USER'].string
            password buildProperties.secrets['GITHUB_TOKEN'].string
        }
    }
    maven {
        url = 'https://maven.pkg.github.com/RakSrinaNa/NameAsCreated/'
        credentials {
            username buildProperties.secrets['GITHUB_USER'].string
            password buildProperties.secrets['GITHUB_TOKEN'].string
        }
    }
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    from sourceSets.main.resources
    filter(ReplaceTokens, tokens: [project_version: project.version, project_name: project.name])
}

application {
    mainModule = project.moduleName
    mainClass = project.mainClass
}

java {
    modularity.inferModulePath.set(true)
}

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

shadowJar {
    baseName = project.name
    classifier = 'shaded'
    version = null
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Wrapper) {
    gradleVersion = project.wrapper_version
}
